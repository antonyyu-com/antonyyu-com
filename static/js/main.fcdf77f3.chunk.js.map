{"version":3,"sources":["components/Header.js","components/About.js","components/Resume.js","components/Contact.js","components/Footer.js","resumeData.js","App.js","serviceWorker.js","index.js"],"names":["Header","resumeData","this","props","react_default","a","createElement","Fragment","id","className","href","title","name","style","color","fontFamily","landingIntro","socialLinks","map","item","key","url","target","rel","Component","About","src","alt","aboutme","email","Resume","work","CompanyName","Title","StartMonth","StartYear","EndMonth","EndYear","Achievements","education","InstitutionName","Degree","GraduationMonth","GraduationYear","skillsDescription","skills","concat","skillname","toLowerCase","Contact","Footer","linkedinLink","githubLink","App","Header_Header","About_About","Resume_Resume","Contact_Contact","Footer_Footer","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fcdf77f3.chunk.js","sourcesContent":["import React, { Component } from 'react'\nexport default class Header extends Component {\n  render () {\n    const resumeData = this.props.resumeData\n    return (\n      <>\n\n        <header id='home'>\n          <nav id='nav-wrap'>\n            <a className='mobile-btn' href='#nav-wrap' title='Show navigation'>Show navigation</a>\n            <a className='mobile-btn' href='#' title='Hide navigation'>Hide navigation</a>\n            <ul id='nav' className='nav'>\n              <li className='current'><a className='smoothscroll' href='#home'>Home</a></li>\n              <li><a className='smoothscroll' href='#about'>About</a></li>\n              <li><a className='smoothscroll' href='#resume'>Resume</a></li>\n              <li><a className='smoothscroll' href='#contact'>Contact</a></li>\n            </ul>\n          </nav>\n\n          <div className='row banner'>\n            <div className='banner-text'>\n              <h1 className='responsive-headline'>ðŸ‘‹ Hello! I'm {resumeData.name}.</h1>\n              <h3 style={{ color: '#fff', fontFamily: 'sans-serif ' }}>{resumeData.landingIntro}\n              </h3>\n              <hr />\n              <ul className='social'>\n                {\n                    resumeData.socialLinks && resumeData.socialLinks.map(item => {\n                      return (\n                        <li key={item.name}>\n                          <a href={item.url} target='_blank' rel='noreferrer'><i className={item.className} /></a>\n                        </li>\n                      )\n                    }\n                    )\n                  }\n              </ul>\n            </div>\n          </div>\n\n          <p className='scrolldown'>\n            <a className='smoothscroll' href='#about'><i className='icon-down-circle' /></a>\n          </p>\n\n        </header>\n      </>\n    )\n  }\n}\n","import React, { Component } from 'react'\nexport default class About extends Component {\n  render () {\n    const resumeData = this.props.resumeData\n    return (\n      <section id='about'>\n        <div className='row'>\n\n          <div className='three columns'>\n\n            <img className='profile-pic' src='images/profilepic.png' alt='Antony Yu' />\n\n          </div>\n\n          <div className='nine columns main-col'>\n\n            <h2>Me</h2>\n            <p>\n              {\n                 resumeData.aboutme\n               }\n            </p>\n\n            <div className='row'>\n\n              <div className='columns contact-details'>\n\n                <h2>Contact</h2>\n                <p className='address'>\n                  <span>{resumeData.name}</span>\n                  <br />\n                  <span>\n                    {resumeData.email}\n                  </span>\n                </p>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react'\nexport default class Resume extends Component {\n  render () {\n    const resumeData = this.props.resumeData\n    return (\n      <section id='resume'>\n        <div className='row work'>\n          <div className='three columns header-col'>\n            <h1><span>Work</span></h1>\n          </div>\n\n          <div className='nine columns main-col'>\n            {\n                resumeData.work && resumeData.work.map((item) => {\n                  return (\n                    <div className='row item'>\n                      <div className='twelve columns'>\n                        <h3>{item.CompanyName}</h3>\n                        <p className='info'>\n                          {item.Title}\n                          <span>&bull;</span> <em className='date'>{item.StartMonth} {item.StartYear} - {item.EndMonth} {item.EndYear}</em>\n                        </p>\n                        <p>\n                          {item.Achievements}\n                        </p>\n                      </div>\n\n                    </div>\n\n                  )\n                })\n              }\n          </div>\n        </div>\n        <div className='row education'>\n\n          <div className='three columns header-col'>\n            <h1><span>Education</span></h1>\n          </div>\n\n          <div className='nine columns main-col'>\n            {\n                resumeData.education && resumeData.education.map((item) => {\n                  return (\n                    <div className='row item'>\n                      <div className='twelve columns'>\n                        <h3>{item.InstitutionName}</h3>\n                        <p className='info'>\n                          {item.Degree}\n                          <span>&bull;</span> <em className='date'>{item.GraduationMonth} {item.GraduationYear}</em>\n                        </p>\n                        <p>\n                          {item.Achievements}\n                        </p>\n                      </div>\n                    </div>\n                  )\n                })\n              }\n          </div>\n        </div>\n\n        <div className='row skill'>\n\n          <div className='three columns header-col'>\n            <h1><span>Skills</span></h1>\n          </div>\n\n          <div className='nine columns main-col'>\n\n            <p>\n              {resumeData.skillsDescription}\n            </p>\n\n            <div className='bars'>\n\n              <ul className='skills'>\n                {\n                  resumeData.skills && resumeData.skills.map((item) => {\n                    return (\n                      <li>\n                        <span className={`bar-expand ${item.skillname.toLowerCase()}`} /><em>{item.skillname}</em>\n                      </li>\n                    )\n                  })\n                }\n\n              </ul>\n\n            </div>\n\n          </div>\n\n        </div>\n\n      </section>\n    )\n  }\n}\n","import React, { Component } from 'react';\nexport default class Contact extends Component {\n  render() {\n    let resumeData = this.props.resumeData;\n    return (\n      <section id=\"contact\">\n        <div className=\"row section-head\">\n          <div className=\"ten columns\">\n            <p className=\"lead\">\n              I am always looking for collaboration opportunities. Feel free to reach out!\n            </p>\n          </div>\n        </div>\n        <div className=\"row\">\n          <aside className=\"eigth columns footer-widgets\">\n            <div className=\"widget\">\n              <p>\n                <a href=\"https://github.com/Antonomy\" target=\"_blank\"><img alt=\"Github\" src=\"https://img.shields.io/badge/GitHub-41454A.svg?&style=for-the-badge&logo=Github&logoColor=white\" /></a>\n                <a href=\"https://www.linkedin.com/in/antonyyu/\" target=\"_blank\"><img alt=\"LinkedIn\" src=\"https://img.shields.io/badge/linkedin-%230077B5.svg?&style=for-the-badge&logo=linkedin&logoColor=white\" /></a>\n                <a href=\"mailto:hello@antonyyu.com\" target=\"_blank\"><img alt=\"Email Me\" src=\"https://img.shields.io/badge/Email%20me-EA4335.svg?&style=for-the-badge&logo=gmail&logoColor=white\" /></a>\n                <a href=\"https://calendly.com/antonyyu\" target=\"_blank\"><img alt=\"Book Time on My Calendar\" src=\"https://img.shields.io/badge/Book%20Time%20with%20me-4285F4.svg?&style=for-the-badge&logo=googlecalendar&logoColor=white\" /></a>\n              </p>\n            </div>\n          </aside>\n        </div>\n      </section>\n    );\n  }\n}","import React, { Component } from 'react'\nexport default class Footer extends Component {\n  render () {\n    const resumeData = this.props.resumeData\n    return (\n      <footer>\n        <div className='row'>\n          <div className='twelve columns'>\n            <ul className='social-links'>\n              {\n              resumeData.socialLinks && resumeData.socialLinks.map((item) => {\n                return (\n                  <li>\n                    <a href={item.url}>\n                      <i className={item.className} />\n                    </a>\n                  </li>\n                )\n              })\n            }\n            </ul>\n\n          </div>\n          <div id='go-top'><a className='smoothscroll' title='Back to Top' href='#home'><i className='icon-up-open' /></a></div>\n        </div>\n      </footer>\n    )\n  }\n}\n","const resumeData = {\n  name: 'Antony',\n  linkedinLink: 'https://www.linkedin.com/in/antonyyu/',\n  landingIntro: \"I'm a Full Stack Software Engineer & Program Operations Leader. I'm always looking for opportunities to collaborate on new projects- so feel free to reach out!\",\n  socialLinks: [\n    {\n      name: 'linkedin',\n      url: 'https://www.linkedin.com/in/antonyyu/',\n      className: 'fa fa-linkedin'\n    },\n    {\n      name: 'github',\n      url: 'https://github.com/Antonomy',\n      className: 'fa fa-github'\n    }\n  ],\n  aboutme: \"I am a user-obsessed, technical, and operationally minded leader with 10 years of experience in tech and program operations. Having built teams globally in 16 countries, I am no stranger to working in fast-paced, hybrid, and global conditions. I'm passionate about engineering simple solutions to complex problems. During my experiences at Riot Games and Tencent, I held roles in leadership, program operations, and organizational transformation, which honed my strengths in change management, mentorship, and delivery operations leading me to my adventure at Huckleberry as VP Operations. A common thread throughout my career is my ability to enthusiastically coach and mentor my colleagues to grow their self confidence and regularly challenge convention. I extended this passion by becoming a full stack software engineer - I am looking to use my relationship building skills to create products and experiences that are at the intersection of building community and advancements in technology.\",\n  email: 'hello@antonyyu.com',\n  githubLink: 'https://github.com/Antonomy',\n  work: [\n    {\n      CompanyName: 'Huckleberry',\n      Title: 'VP Operations',\n      StartMonth: 'Jan',\n      StartYear: '2020',\n      EndMonth: 'Present',\n      EndYear: '',\n      Achievements: ''\n    },\n    {\n      CompanyName: 'Tencent',\n      Title: 'Senior Manager, Global Esports',\n      StartMonth: 'Sept',\n      StartYear: '2018',\n      EndMonth: 'Apr',\n      EndYear: '2020',\n      Achievements: 'PUBG Mobile'\n    },\n    {\n      CompanyName: 'Riot Games',\n      Title: 'Manager, Global Esports Live Production',\n      StartMonth: 'Aug',\n      StartYear: '2014',\n      EndMonth: 'Sept',\n      EndYear: '2018',\n      Achievements: 'League of Legends'\n    }\n  ],\n  education: [\n    {\n      InstitutionName: 'General Assembly',\n      Degree: 'Full Stack Software Engineering',\n      GraduationMonth: 'February',\n      GraduationYear: '2022',\n      Achievements: ''\n    },\n    {\n      InstitutionName: 'California State University, Los Angeles (CSULA)',\n      Degree: 'Master of Business Administration (MBA)',\n      GraduationMonth: 'March',\n      GraduationYear: '2013',\n      Achievements: ''\n    },\n    {\n      InstitutionName: 'University of California, San Diego (UCSD)',\n      Degree: 'Psychology | Business Management | Law Minor',\n      GraduationMonth: 'March',\n      GraduationYear: '2010',\n      Achievements: ''\n    }\n\n  ],\n  skillsDescription: 'Technical Skills',\n  skills: [\n    {\n      skillname: 'React'\n    },\n    {\n      skillname: 'HTML'\n    },\n    {\n      skillname: 'CSS'\n    },\n    {\n      skillname: 'JavaScript'\n    },\n    {\n      skillname: 'MongoDB'\n    },\n    {\n      skillname: 'Express'\n    },\n    {\n      skillname: 'Node'\n    }\n  ]\n}\n\nexport default resumeData\n","import React, { Component } from 'react'\nimport Header from './components/Header'\nimport About from './components/About'\nimport Resume from './components/Resume'\nimport Contact from './components/Contact'\nimport Footer from './components/Footer'\nimport resumeData from './resumeData'\nclass App extends Component {\n  render () {\n    return (\n      <div className='App'>\n        <Header resumeData={resumeData} />\n        <About resumeData={resumeData} />\n        <Resume resumeData={resumeData} />\n        <Contact resumeData={resumeData} />\n        <Footer resumeData={resumeData} />\n      </div>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}